{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOvzpzXMF6ecR8fhBjRhm0l",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/zhenxiay/GoogleColab/blob/feature_streamlit/streamlit_nba_test.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "_3x0Bu32_X5k",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 582
        },
        "outputId": "69564305-e51c-4fd2-cb89-270cf7ab2a71"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Player  Age   G    MP   PER    TS%  OBPM  DBPM  BPM  VORP\n",
              "0        Fred VanVleet   29  73  2684  16.7  0.568   2.6   0.8  3.4   3.6\n",
              "1          Jalen Green   21  82  2601  14.7  0.541   0.4  -0.9 -0.5   1.0\n",
              "2     Jabari Smith Jr.   20  76  2424  13.8  0.571  -0.5   0.1 -0.4   1.0\n",
              "3        Dillon Brooks   28  72  2227   9.4  0.549  -3.3  -0.3 -3.6  -0.9\n",
              "4       Alperen Sengun   21  63  2046  22.0  0.585   3.1   1.7  4.9   3.5\n",
              "5        Amen Thompson   21  62  1388  18.2  0.576  -0.1   1.9  1.8   1.3\n",
              "6           Jeff Green   37  78  1307  11.3  0.590  -1.6  -0.4 -2.1   0.0\n",
              "7        Aaron Holiday   27  78  1269  11.5  0.578  -1.8   0.3 -1.5   0.2\n",
              "8        Jae'Sean Tate   28  65  1031   9.3  0.538  -3.7   1.5 -2.3  -0.1\n",
              "9         Cam Whitmore   19  47   880  16.6  0.561   1.0  -0.9  0.1   0.5\n",
              "10        Jock Landale   28  56   763  15.6  0.584  -0.5   0.4 -0.1   0.4\n",
              "11          Tari Eason   22  22   480  17.1  0.528  -0.4   2.0  1.6   0.4\n",
              "12      Reggie Bullock   32  44   417   7.7  0.582  -2.9   0.5 -2.4   0.0\n",
              "13  Jeenathan Williams   24  22   129  15.6  0.565  -0.8  -0.8 -1.6   0.0\n",
              "14         Nate Hinton   24  15    75  17.6  0.585   1.9   1.7  3.6   0.1\n",
              "15    Boban MarjanoviÄ‡   35  14    71  21.1  0.560   0.2  -0.5 -0.3   0.0\n",
              "16    Jermaine Samuels   25  14    60  15.1  0.672  -0.3   1.1  0.8   0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6685bd16-d5e7-41c5-9cf2-fabb70d29874\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Player</th>\n",
              "      <th>Age</th>\n",
              "      <th>G</th>\n",
              "      <th>MP</th>\n",
              "      <th>PER</th>\n",
              "      <th>TS%</th>\n",
              "      <th>OBPM</th>\n",
              "      <th>DBPM</th>\n",
              "      <th>BPM</th>\n",
              "      <th>VORP</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Fred VanVleet</td>\n",
              "      <td>29</td>\n",
              "      <td>73</td>\n",
              "      <td>2684</td>\n",
              "      <td>16.7</td>\n",
              "      <td>0.568</td>\n",
              "      <td>2.6</td>\n",
              "      <td>0.8</td>\n",
              "      <td>3.4</td>\n",
              "      <td>3.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Jalen Green</td>\n",
              "      <td>21</td>\n",
              "      <td>82</td>\n",
              "      <td>2601</td>\n",
              "      <td>14.7</td>\n",
              "      <td>0.541</td>\n",
              "      <td>0.4</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>-0.5</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Jabari Smith Jr.</td>\n",
              "      <td>20</td>\n",
              "      <td>76</td>\n",
              "      <td>2424</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0.571</td>\n",
              "      <td>-0.5</td>\n",
              "      <td>0.1</td>\n",
              "      <td>-0.4</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Dillon Brooks</td>\n",
              "      <td>28</td>\n",
              "      <td>72</td>\n",
              "      <td>2227</td>\n",
              "      <td>9.4</td>\n",
              "      <td>0.549</td>\n",
              "      <td>-3.3</td>\n",
              "      <td>-0.3</td>\n",
              "      <td>-3.6</td>\n",
              "      <td>-0.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Alperen Sengun</td>\n",
              "      <td>21</td>\n",
              "      <td>63</td>\n",
              "      <td>2046</td>\n",
              "      <td>22.0</td>\n",
              "      <td>0.585</td>\n",
              "      <td>3.1</td>\n",
              "      <td>1.7</td>\n",
              "      <td>4.9</td>\n",
              "      <td>3.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Amen Thompson</td>\n",
              "      <td>21</td>\n",
              "      <td>62</td>\n",
              "      <td>1388</td>\n",
              "      <td>18.2</td>\n",
              "      <td>0.576</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1.8</td>\n",
              "      <td>1.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Jeff Green</td>\n",
              "      <td>37</td>\n",
              "      <td>78</td>\n",
              "      <td>1307</td>\n",
              "      <td>11.3</td>\n",
              "      <td>0.590</td>\n",
              "      <td>-1.6</td>\n",
              "      <td>-0.4</td>\n",
              "      <td>-2.1</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Aaron Holiday</td>\n",
              "      <td>27</td>\n",
              "      <td>78</td>\n",
              "      <td>1269</td>\n",
              "      <td>11.5</td>\n",
              "      <td>0.578</td>\n",
              "      <td>-1.8</td>\n",
              "      <td>0.3</td>\n",
              "      <td>-1.5</td>\n",
              "      <td>0.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Jae'Sean Tate</td>\n",
              "      <td>28</td>\n",
              "      <td>65</td>\n",
              "      <td>1031</td>\n",
              "      <td>9.3</td>\n",
              "      <td>0.538</td>\n",
              "      <td>-3.7</td>\n",
              "      <td>1.5</td>\n",
              "      <td>-2.3</td>\n",
              "      <td>-0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Cam Whitmore</td>\n",
              "      <td>19</td>\n",
              "      <td>47</td>\n",
              "      <td>880</td>\n",
              "      <td>16.6</td>\n",
              "      <td>0.561</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.9</td>\n",
              "      <td>0.1</td>\n",
              "      <td>0.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Jock Landale</td>\n",
              "      <td>28</td>\n",
              "      <td>56</td>\n",
              "      <td>763</td>\n",
              "      <td>15.6</td>\n",
              "      <td>0.584</td>\n",
              "      <td>-0.5</td>\n",
              "      <td>0.4</td>\n",
              "      <td>-0.1</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Tari Eason</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>480</td>\n",
              "      <td>17.1</td>\n",
              "      <td>0.528</td>\n",
              "      <td>-0.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.6</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Reggie Bullock</td>\n",
              "      <td>32</td>\n",
              "      <td>44</td>\n",
              "      <td>417</td>\n",
              "      <td>7.7</td>\n",
              "      <td>0.582</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>0.5</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Jeenathan Williams</td>\n",
              "      <td>24</td>\n",
              "      <td>22</td>\n",
              "      <td>129</td>\n",
              "      <td>15.6</td>\n",
              "      <td>0.565</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-0.8</td>\n",
              "      <td>-1.6</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Nate Hinton</td>\n",
              "      <td>24</td>\n",
              "      <td>15</td>\n",
              "      <td>75</td>\n",
              "      <td>17.6</td>\n",
              "      <td>0.585</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1.7</td>\n",
              "      <td>3.6</td>\n",
              "      <td>0.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Boban MarjanoviÄ‡</td>\n",
              "      <td>35</td>\n",
              "      <td>14</td>\n",
              "      <td>71</td>\n",
              "      <td>21.1</td>\n",
              "      <td>0.560</td>\n",
              "      <td>0.2</td>\n",
              "      <td>-0.5</td>\n",
              "      <td>-0.3</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Jermaine Samuels</td>\n",
              "      <td>25</td>\n",
              "      <td>14</td>\n",
              "      <td>60</td>\n",
              "      <td>15.1</td>\n",
              "      <td>0.672</td>\n",
              "      <td>-0.3</td>\n",
              "      <td>1.1</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6685bd16-d5e7-41c5-9cf2-fabb70d29874')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6685bd16-d5e7-41c5-9cf2-fabb70d29874 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6685bd16-d5e7-41c5-9cf2-fabb70d29874');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-37544851-ef05-49cb-9213-57b15526c57e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37544851-ef05-49cb-9213-57b15526c57e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-37544851-ef05-49cb-9213-57b15526c57e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_d4cb9393-5827-4f1f-bbc0-33e316b034bb\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_main')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d4cb9393-5827-4f1f-bbc0-33e316b034bb button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_main');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_main",
              "summary": "{\n  \"name\": \"df_main\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Player\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"Fred VanVleet\",\n          \"Jalen Green\",\n          \"Amen Thompson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 19,\n        \"max\": 37,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          35,\n          24,\n          29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 14,\n        \"max\": 82,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          56,\n          44,\n          73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 932,\n        \"min\": 60,\n        \"max\": 2684,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          2684,\n          2601,\n          1388\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PER\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.017461885320134,\n        \"min\": 7.7,\n        \"max\": 22.0,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          16.7,\n          14.7,\n          18.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TS%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03149031130176951,\n        \"min\": 0.528,\n        \"max\": 0.672,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0.568,\n          0.541,\n          0.576\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OBPM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9158779280773914,\n        \"min\": -3.7,\n        \"max\": 3.1,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          2.6,\n          0.4,\n          -0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DBPM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.024838581263927,\n        \"min\": -0.9,\n        \"max\": 2.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          0.4,\n          0.5,\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BPM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.353251817729471,\n        \"min\": -3.6,\n        \"max\": 4.9,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          3.4,\n          -0.5,\n          1.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VORP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2047394153191509,\n        \"min\": -0.9,\n        \"max\": 3.6,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.0,\n          3.6,\n          0.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "def read_data(team,year):\n",
        "    #year = dataset['Year-Wert']\n",
        "    url = f'https://www.basketball-reference.com/teams/{team}/{year}.html'\n",
        "    data = pd.read_html(url)\n",
        "    df_a = data[3]\n",
        "    return df_a\n",
        "\n",
        "cols = ['Player','Age','G','MP','PER','TS%','OBPM','DBPM','BPM','VORP']\n",
        "\n",
        "df_main = read_data('HOU',2024)[cols]\n",
        "\n",
        "df_main"
      ]
    }
  ]
}